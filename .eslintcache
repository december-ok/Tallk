[{"C:\\Users\\사이버지식정보방\\Tallk\\src\\index.js":"1","C:\\Users\\사이버지식정보방\\Tallk\\src\\App.js":"2","C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\index.js":"3","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Talk.js":"4","C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\user.js":"5","C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\setting.js":"6","C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\room.js":"7","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Main.js":"8","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Home\\Home.js":"9","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoomList\\ChatRoomList.js":"10","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Websocket\\WebSocket.js":"11","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoom\\ChatRoom.js":"12","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Home\\ProfileBlock.js":"13","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoomList\\ChatRoomBlock.js":"14","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoom\\ChatBox.js":"15","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Websocket\\WebSocketRouter.js":"16","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoomList\\AddChatPopup.js":"17","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Websocket\\WebSocketController.js":"18","C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\users.js":"19","C:\\Users\\사이버지식정보방\\Tallk\\src\\apiController.js":"20","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Navigation.js":"21","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Setting.js":"22","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Home\\Profile.js":"23","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Home\\AddFriend.js":"24","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Auth\\Login.js":"25","C:\\Users\\사이버지식정보방\\Tallk\\src\\dataController.js":"26"},{"size":547,"mtime":1611627996606,"results":"27","hashOfConfig":"28"},{"size":149,"mtime":1610374440248,"results":"29","hashOfConfig":"28"},{"size":275,"mtime":1611387008622,"results":"30","hashOfConfig":"28"},{"size":649,"mtime":1611728648477,"results":"31","hashOfConfig":"28"},{"size":1016,"mtime":1611750066417,"results":"32","hashOfConfig":"28"},{"size":564,"mtime":1610374440257,"results":"33","hashOfConfig":"28"},{"size":3005,"mtime":1611750250364,"results":"34","hashOfConfig":"28"},{"size":2755,"mtime":1611916252837,"results":"35","hashOfConfig":"28"},{"size":949,"mtime":1611727137772,"results":"36","hashOfConfig":"28"},{"size":971,"mtime":1611727153861,"results":"37","hashOfConfig":"28"},{"size":942,"mtime":1610627500534,"results":"38","hashOfConfig":"28"},{"size":4960,"mtime":1612096070662,"results":"39","hashOfConfig":"28"},{"size":441,"mtime":1612098605047,"results":"40","hashOfConfig":"28"},{"size":799,"mtime":1612402602895,"results":"41","hashOfConfig":"28"},{"size":755,"mtime":1612098694618,"results":"42","hashOfConfig":"28"},{"size":612,"mtime":1611458371868,"results":"43","hashOfConfig":"28"},{"size":3588,"mtime":1611726526593,"results":"44","hashOfConfig":"28"},{"size":844,"mtime":1611458711375,"results":"45","hashOfConfig":"28"},{"size":980,"mtime":1611749809047,"results":"46","hashOfConfig":"28"},{"size":1465,"mtime":1611919985927,"results":"47","hashOfConfig":"28"},{"size":513,"mtime":1611629109379,"results":"48","hashOfConfig":"28"},{"size":246,"mtime":1611727188682,"results":"49","hashOfConfig":"28"},{"size":1767,"mtime":1612405803980,"results":"50","hashOfConfig":"28"},{"size":1152,"mtime":1612098711389,"results":"51","hashOfConfig":"28"},{"size":2104,"mtime":1611919526082,"results":"52","hashOfConfig":"28"},{"size":400,"mtime":1611921122449,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1g8f3n7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"56"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\사이버지식정보방\\Tallk\\src\\index.js",[],["123","124"],"C:\\Users\\사이버지식정보방\\Tallk\\src\\App.js",[],"C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\index.js",[],"C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Talk.js",["125","126","127","128"],"import { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport { setUser } from '../modules/user';\r\nimport Login from './Auth/Login';\r\nimport Home from './Home/Home';\r\nimport Main from './Main';\r\n\r\nfunction Talk() {\r\n\tconst store = useSelector((state) => state);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<div className=\"Talk\">\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\t\t\t\t\t{/* <Route path=\"/join\" component={} /> */}\r\n\t\t\t\t\t<Route path=\"/\" component={Main} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Talk;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\user.js",["129"],"import { act } from 'react-dom/test-utils';\r\n\r\nconst SET_USER = 'user/SET_USER';\r\nconst UPDATE = 'user/UPDATE';\r\nconst BLOCK = 'user/BLOCK';\r\nconst USER_RESET = 'user/RESET';\r\nconst SET_ID = 'user/SET_ID';\r\n\r\nexport const setUser = (user) => ({ type: SET_USER, user });\r\nexport const update = (user) => ({ type: UPDATE, user });\r\nexport const block = () => ({ type: BLOCK });\r\nexport const userReset = () => ({ type: USER_RESET });\r\nexport const setId = (userId) => ({ type: SET_ID, userId });\r\n\r\nconst initialState = {\r\n\tloaded: false,\r\n};\r\n\r\nexport default function user(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.user,\r\n\t\t\t\tblock: false,\r\n\t\t\t};\r\n\t\tcase UPDATE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.user,\r\n\t\t\t\tblock: false,\r\n\t\t\t};\r\n\t\tcase BLOCK:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tblock: true,\r\n\t\t\t};\r\n\t\tcase USER_RESET:\r\n\t\t\treturn {};\r\n\t\tcase SET_ID:\r\n\t\t\treturn {\r\n\t\t\t\t_id: action.userId,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\setting.js",[],"C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\room.js",[],"C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Main.js",["130"],"import { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport Home from './Home/Home';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ChatRoomList from './ChatRoomList/ChatRoomList';\r\nimport { Websocket } from './Websocket/WebSocket';\r\nimport { addRoom } from '../modules/room';\r\nimport ChatRoom from './ChatRoom/ChatRoom';\r\nimport { updateUser } from '../modules/users';\r\nimport { getRoom, getUser } from '../apiController';\r\nimport Navigation from './Navigation';\r\nimport { setUser } from '../modules/user';\r\nimport Setting from './Setting';\r\nimport Profile from './Home/Profile';\r\nimport AddFriend from './Home/AddFriend';\r\nimport AddChatPopup from './ChatRoomList/AddChatPopup';\r\n\r\nfunction Main({ history }) {\r\n\tconst store = useSelector((state) => state);\r\n\tconst dispatch = useDispatch();\r\n\tconst [Loaded, setLoaded] = useState(false);\r\n\r\n\t// const userId = '600f65ca968bf33884b4b0db';\r\n\tconst userId = store.user._id;\r\n\tuseEffect(() => {\r\n\t\tconst getUserData = async (userId) => {\r\n\t\t\tconst data = await getUser(userId);\r\n\t\t\tdispatch(setUser(data));\r\n\r\n\t\t\tconst roomPro = data.roomList.map((roomId) => {\r\n\t\t\t\treturn (async () => {\r\n\t\t\t\t\tconst roomData = await getRoom({ roomId });\r\n\t\t\t\t\tdispatch(addRoom(roomData));\r\n\t\t\t\t})();\r\n\t\t\t});\r\n\t\t\tconst userPro = data.friendsList.map((userId) => {\r\n\t\t\t\treturn (async () => {\r\n\t\t\t\t\tconst userData = await getUser(userId);\r\n\t\t\t\t\tdispatch(updateUser(userId, userData));\r\n\t\t\t\t})();\r\n\t\t\t});\r\n\r\n\t\t\tawait Promise.all([...roomPro, ...userPro]);\r\n\t\t\t// console.log('All Loaded done');\r\n\r\n\t\t\tWebsocket.open(data._id);\r\n\t\t\tsetLoaded(true);\r\n\t\t};\r\n\r\n\t\tif (userId) {\r\n\t\t\tgetUserData(userId);\r\n\t\t\treturn () => {\r\n\t\t\t\tWebsocket.close();\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\twindow.location.href = '/#/login';\r\n\t\t}\r\n\t}, []);\r\n\r\n\tif (store.user.block) {\r\n\t\treturn (\r\n\t\t\t<div className=\"Loading\">\r\n\t\t\t\t<em>Only one client is Allowed!</em>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tif (!Loaded) {\r\n\t\treturn (\r\n\t\t\t<div className=\"Loading\">\r\n\t\t\t\t<h1>Loading...</h1>\r\n\t\t\t\t<h5>If loading is too long, something went Wrong!</h5>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"Main\">\r\n\t\t\t<Navigation />\r\n\t\t\t<Router>\r\n\t\t\t\t<div className=\"contents\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/profile/:id\" component={Profile} />\r\n\t\t\t\t\t\t<Route path=\"/chats/:id\" component={ChatRoom} />\r\n\t\t\t\t\t\t<Route path=\"/setting\" component={Setting} />\r\n\t\t\t\t\t\t<Route path=\"/addChat\" component={AddChatPopup} />\r\n\t\t\t\t\t\t<Route path=\"/addFriend\" component={AddFriend} />\r\n\t\t\t\t\t\t<Route path=\"/chats\" component={ChatRoomList} />\r\n\t\t\t\t\t\t<Route path=\"/:id\">No such Page</Route>\r\n\t\t\t\t\t\t<Route path=\"/\" component={Home} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Home\\Home.js",[],"C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoomList\\ChatRoomList.js",["131"],"import { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport AddChatPopup from './AddChatPopup';\r\nimport ChatRoomBlock from './ChatRoomBlock';\r\n\r\nfunction ChatRoomList() {\r\n\tconst store = useSelector((state) => state);\r\n\t// console.log(store);\r\n\treturn (\r\n\t\t<div className=\"ChatRoomList\">\r\n\t\t\t<div className=\"ChatRoomListHeader Header\">\r\n\t\t\t\t<h1>Chats</h1>\r\n\t\t\t\t<Link to=\"/addChat\">\r\n\t\t\t\t\t<button className=\"AddRoomButton\">\r\n\t\t\t\t\t\t<i className=\"fas fa-comment-medical\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t{/* sort function 추가하기!!!!!!! */}\r\n\t\t\t{Array.from(store.room.entries())\r\n\t\t\t\t.sort((a, b) => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\tnew Date(a[1].recentChatTime) - new Date(b[1].recentChatTime)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn new Date(b[1].recentChatTime) - new Date(a[1].recentChatTime);\r\n\t\t\t\t})\r\n\t\t\t\t.map((item) => (\r\n\t\t\t\t\t<ChatRoomBlock info={item[1]} key={item[1]._id} />\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ChatRoomList;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Websocket\\WebSocket.js",["132"],"import { store } from '../..';\r\nimport { WebSocketRouter } from './WebSocketRouter';\r\n\r\nexport const Websocket = (() => {\r\n\tlet ws;\r\n\treturn {\r\n\t\topen: (userId) => {\r\n\t\t\ttry {\r\n\t\t\t\tws = new WebSocket('ws://localhost:4001');\r\n\r\n\t\t\t\tws.onopen = () => {\r\n\t\t\t\t\tconsole.log('Connected!!');\r\n\t\t\t\t\tws.send(\r\n\t\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\t\ttype: 'authenticate',\r\n\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\tauthKey: 'sdf',\r\n\t\t\t\t\t\t\t\tuserId: userId,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tws.onmessage = async (message) => {\r\n\t\t\t\t\tconst text = await new Response(message.data).text();\r\n\t\t\t\t\tconst data = JSON.parse(text);\r\n\r\n\t\t\t\t\tWebSocketRouter(data);\r\n\t\t\t\t};\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsend: (messageObject) => {\r\n\t\t\ttry {\r\n\t\t\t\tws.send(JSON.stringify(messageObject));\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t},\r\n\t\tclose: () => {\r\n\t\t\tif (ws) {\r\n\t\t\t\tws.close();\r\n\t\t\t\tconsole.log('closed');\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n})();\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoom\\ChatRoom.js",["133","134","135","136"],"import axios from 'axios';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { base_uri } from '../..';\r\nimport { getChatRoom } from '../../apiController';\r\nimport { getUserAsync } from '../../dataController';\r\nimport { addPrevChatObjList, removeRoom } from '../../modules/room';\r\nimport { Websocket } from '../Websocket/WebSocket';\r\nimport ChatBox from './ChatBox';\r\n\r\nfunction ChatRoom() {\r\n\tconst link =\r\n\t\t'https://upload.wikimedia.org/wikipedia/commons/c/c1/Lionel_Messi_20180626.jpg';\r\n\tconst store = useSelector((state) => state);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { id } = useParams();\r\n\tconst inputBox = useRef();\r\n\tconst optionDiv = useRef();\r\n\tconst info = store.room.get(id);\r\n\tconst [chatLoaded, setChatLoaded] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getChat = async (from, amount) => {\r\n\t\t\tconst data = await getChatRoom({ roomId: id, from, amount });\r\n\t\t\tdispatch(addPrevChatObjList(id, data));\r\n\t\t\tinfo.chatLoaded = true;\r\n\t\t\tsetChatLoaded(true);\r\n\t\t\tinfo.chatLoaded = true;\r\n\t\t};\r\n\t\tconst getChatRoomUserInfo = async () => {\r\n\t\t\tconst userPro = info.userList.map((userId) => {\r\n\t\t\t\treturn (async () => {\r\n\t\t\t\t\tawait getUserAsync(userId);\r\n\t\t\t\t})();\r\n\t\t\t});\r\n\t\t\tawait Promise.all(userPro);\r\n\t\t};\r\n\t\tgetChatRoomUserInfo();\r\n\t\tif (info.chatIdList.length && !info.chatLoaded) {\r\n\t\t\t// console.log('getdata');\r\n\t\t\tgetChat(info.chatIdList[info.chatIdList.length - 1], 50);\r\n\t\t} else {\r\n\t\t\tsetChatLoaded(true);\r\n\t\t\tinfo.chatLoaded = true;\r\n\t\t}\r\n\r\n\t\tif (document.querySelector('.Navigation'))\r\n\t\t\tdocument.querySelector('.Navigation').style.display = 'none';\r\n\r\n\t\tdocument.body.style.overflowX = 'hidden';\r\n\r\n\t\treturn () => {\r\n\t\t\tif (document.querySelector('.Navigation'))\r\n\t\t\t\tdocument.querySelector('.Navigation').style.display = '';\r\n\r\n\t\t\tdocument.body.style.overflowX = '';\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst sendChat = () => {\r\n\t\tif (inputBox.current.value.trim() !== '') {\r\n\t\t\tWebsocket.send({\r\n\t\t\t\ttype: 'sendRealTimeChat',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tuserId: store.user._id,\r\n\t\t\t\t\troomId: info._id,\r\n\t\t\t\t\tchat: inputBox.current.value,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tinputBox.current.value = '';\r\n\t\t}\r\n\t};\r\n\r\n\tconst showOption = () => {\r\n\t\toptionDiv.current.classList.toggle('Show');\r\n\t};\r\n\r\n\tconst exitRoom = async () => {\r\n\t\tdispatch(removeRoom(id));\r\n\t\twindow.location.href = `http://localhost:3000/#/chats`;\r\n\t\tconst message = `${base_uri}/room/exitRoom`;\r\n\t\tconst { data } = await axios.post(message, {\r\n\t\t\troomId: id,\r\n\t\t\tuserId: store.user._id,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!info && <div className=\"ChatRoom\">No such Room</div>}\r\n\t\t\t{!chatLoaded && <div className=\"ChatRoom\">Loading...</div>}\r\n\t\t\t{info && chatLoaded && (\r\n\t\t\t\t<div className=\"ChatRoom\">\r\n\t\t\t\t\t<div className=\"ChatRoomMain\">\r\n\t\t\t\t\t\t<div className=\"ChatRoomHeader\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\twindow.history.back();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-chevron-left\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<span className=\"ChatRoomName\">{info.roomName}</span>\r\n\t\t\t\t\t\t\t<button onClick={showOption}>\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-bars\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"ChatDialogs\">\r\n\t\t\t\t\t\t\t{info.chatObjList.map((item) => (\r\n\t\t\t\t\t\t\t\t<ChatBox info={item} userId={store.user._id} key={item._id} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"ChatBottom\">\r\n\t\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t\t<i className=\"far fa-plus-square\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<input className=\"ChatInput\" ref={inputBox}></input>\r\n\t\t\t\t\t\t\t<button className=\"ChatButton\" onClick={sendChat}>\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-arrow-right\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"ChatRoomOption\" ref={optionDiv}>\r\n\t\t\t\t\t\t<button onClick={showOption}>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-bars\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<h3>Chat Option</h3>\r\n\t\t\t\t\t\t<h4>Users</h4>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t<Link to={`/profile/${store.user._id}`}>\r\n\t\t\t\t\t\t\t\t<div className=\"SimpleUserBox\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"SimpleUserBoxImg\" src={link} width=\"100\" />\r\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user\" />\r\n\t\t\t\t\t\t\t\t\t<h4>{store.user.userName}</h4>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{store.room\r\n\t\t\t\t\t\t\t.get(String(id))\r\n\t\t\t\t\t\t\t.userList.filter((item) => item !== store.user._id)\r\n\t\t\t\t\t\t\t.map((item) => {\r\n\t\t\t\t\t\t\t\tconst user = store.users.get(item);\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Link to={`/profile/${user._id}`} key={user._id}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"SimpleUserBox\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"SimpleUserBoxImg\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={link}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"100\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>{user.userName}</h4>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<button className=\"InviteButton\">Invite (notImplemented)</button>\r\n\t\t\t\t\t\t<button className=\"Exit Room\" onClick={exitRoom}>\r\n\t\t\t\t\t\t\tExit Room\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ChatRoom;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Home\\ProfileBlock.js",["137","138"],"import { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProfileBlock({ user }) {\r\n\treturn (\r\n\t\t<Link to={`/profile/${user._id}`}>\r\n\t\t\t<div className=\"ProfileBlock\">\r\n\t\t\t\t<img src={user.avatarUrl} alt=\"img\" width=\"100\" />\r\n\t\t\t\t<h3 className=\"UserName\">{user.userName}</h3>\r\n\t\t\t\t<h5 className=\"Quote\">{user.quoteMessage}</h5>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default ProfileBlock;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoomList\\ChatRoomBlock.js",["139"],"import { Link } from 'react-router-dom';\r\nimport ChatRoomList from './ChatRoomList';\r\n\r\nfunction ChatRoomBlock({ info }) {\r\n\tconst link =\r\n\t\t'https://cdn.vox-cdn.com/thumbor/0BrQddT3Tlqzjwl5kviUWdIjgJs=/0x0:4256x2706/1200x800/filters:focal(2070x1006:2750x1686)/cdn.vox-cdn.com/uploads/chorus_image/image/51305115/114916541.0.jpg';\r\n\treturn (\r\n\t\t<Link to={`/chats/${info._id}`}>\r\n\t\t\t<div className=\"ChatRoomBlock\">\r\n\t\t\t\t<img src={link} alt=\"profile_img\" width=\"100\" />\r\n\t\t\t\t<div className=\"RoomTitle\">\r\n\t\t\t\t\t<h3>{info.roomName.substring(0, 12)}</h3>\r\n\t\t\t\t\t<i className=\"fas fa-user\" />\r\n\t\t\t\t\t<span>{info.userList.length}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h5>{info.recentChat}</h5>\r\n\t\t\t\t\t<span class=\"Notice\">{`5`}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default ChatRoomBlock;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoom\\ChatBox.js",["140"],"import format from 'date-format';\r\n\r\nfunction ChatBox({ info, userId }) {\r\n\tconst isMine = String(info.speaker._id) === String(userId);\r\n\treturn (\r\n\t\t<div className=\"ChatBox\">\r\n\t\t\t{!isMine && (\r\n\t\t\t\t<div className=\"Others\">\r\n\t\t\t\t\t<img src={info.speaker.avatarUrl} />\r\n\t\t\t\t\t<h5>{info.speaker.userName}</h5>\r\n\t\t\t\t\t<div className=\"ChatBoxMessage\">{info.message}</div>\r\n\t\t\t\t\t<span className=\"Time\">\r\n\t\t\t\t\t\t{format('MM/dd hh:mm', new Date(info.createdAt))}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{isMine && (\r\n\t\t\t\t<div className=\"Mine\">\r\n\t\t\t\t\t<div className=\"ChatBoxMessage\">{info.message}</div>\r\n\t\t\t\t\t<span className=\"Time\">\r\n\t\t\t\t\t\t{format('MM/dd hh:mm', new Date(info.createdAt))}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ChatBox;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Websocket\\WebSocketRouter.js",[],"C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\ChatRoomList\\AddChatPopup.js",["141"],"import { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { postCreateChatRoom } from '../../apiController';\r\n\r\nfunction AddChatPopup() {\r\n\tconst userDiv = useRef();\r\n\tconst nextButton = useRef();\r\n\tconst store = useSelector((state) => state);\r\n\tconst [selectedUsers, setSelectedUsers] = useState([]);\r\n\tconst [roomName, setRoomName] = useState([]);\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\tconst userBoxClick = (e) => {\r\n\t\tconst userBox = e.currentTarget;\r\n\t\tconst checkbox = e.currentTarget.childNodes[0];\r\n\t\t// 이것이 Id...\r\n\t\t// console.log(userBox.attributes.data.value);\r\n\t\tif (e.target !== checkbox) checkbox.checked = !checkbox.checked;\r\n\r\n\t\tif (checkbox.checked) {\r\n\t\t\tsetSelectedUsers(selectedUsers.concat(userBox.attributes.data.value));\r\n\t\t\tsetRoomName(roomName.concat(e.currentTarget.childNodes[2].textContent));\r\n\t\t} else {\r\n\t\t\t//제거\r\n\t\t\tsetSelectedUsers(\r\n\t\t\t\tselectedUsers.filter((item) => item !== userBox.attributes.data.value)\r\n\t\t\t);\r\n\t\t\tsetRoomName(\r\n\t\t\t\troomName.filter(\r\n\t\t\t\t\t(item) => item !== e.currentTarget.childNodes[2].textContent\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst searchUpdate = (e) => {\r\n\t\t// console.log(e.currentTarget.value);\r\n\t\tsetSearch(e.currentTarget.value);\r\n\t};\r\n\r\n\tconst makeNewChatRoom = async () => {\r\n\t\tconst data = await postCreateChatRoom({\r\n\t\t\tcreator: store.user._id,\r\n\t\t\troomName: roomName.concat(store.user.userName).join(', '),\r\n\t\t\tuserList: selectedUsers.concat(store.user._id),\r\n\t\t});\r\n\t\twindow.location.href = 'http://localhost:3000/#/chats/' + data._id;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//인원이 있을경우 버튼 비활성화\r\n\t\tif (selectedUsers.length) {\r\n\t\t\tnextButton.current.removeAttribute('disabled');\r\n\t\t} else {\r\n\t\t\tnextButton.current.setAttribute('disabled', true);\r\n\t\t}\r\n\t}, [selectedUsers]);\r\n\r\n\tconst link =\r\n\t\t'https://upload.wikimedia.org/wikipedia/commons/c/c1/Lionel_Messi_20180626.jpg';\r\n\r\n\treturn (\r\n\t\t<div className=\"BackgroundScreen\">\r\n\t\t\t<div className=\"AddChatPopup\">\r\n\t\t\t\t<div className=\"AddChatHeader\">\r\n\t\t\t\t\t<Link to=\"/chats\">\r\n\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-chevron-left\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<h3>채팅할 사람 추가하기</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"SelectedUserList\" ref={userDiv}>\r\n\t\t\t\t\t{selectedUsers.map((item) => {\r\n\t\t\t\t\t\tconst user = store.users.get(item);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"SelectedUser\" key={user._id}>\r\n\t\t\t\t\t\t\t\t<img src={user.avatarUrl} alt={user.userName} />\r\n\t\t\t\t\t\t\t\t<h5>{user.userName}</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"UserSearchBox\"\r\n\t\t\t\t\tonChange={searchUpdate}\r\n\t\t\t\t\tplaceholder=\"Type Something...\"\r\n\t\t\t\t/>\r\n\t\t\t\t{store.user.friendsList\r\n\t\t\t\t\t.filter((item) => {\r\n\t\t\t\t\t\tconst user = store.users.get(item);\r\n\t\t\t\t\t\treturn user.userName.includes(search);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map((item) => {\r\n\t\t\t\t\t\tconst user = store.users.get(item);\r\n\t\t\t\t\t\t// console.log(user);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"SimpleUserBox\"\r\n\t\t\t\t\t\t\t\tkey={user._id}\r\n\t\t\t\t\t\t\t\tdata={user._id}\r\n\t\t\t\t\t\t\t\tonClick={userBoxClick}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\t\tchecked={selectedUsers.includes(user._id)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<img className=\"SimpleUserBoxImg\" src={link} width=\"100\" />\r\n\t\t\t\t\t\t\t\t<h4>{user.userName}</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"CreateButton\"\r\n\t\t\t\t\tonClick={makeNewChatRoom}\r\n\t\t\t\t\tref={nextButton}\r\n\t\t\t\t>\r\n\t\t\t\t\tNew Chat\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default AddChatPopup;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Websocket\\WebSocketController.js",["142","143","144","145","146","147"],"import { base_uri, store } from '../..';\r\nimport room, { addRealChat, addRoom, initRoom } from '../../modules/room';\r\nimport { block } from '../../modules/user';\r\n\r\nexport const getRealTimeChat = (data) => {\r\n\tconst { roomId, chat } = data;\r\n\tstore.dispatch(addRealChat(roomId, chat));\r\n};\r\n\r\nexport const getReadChat = (data) => {\r\n\tconst { chatId, userId, roomId } = data;\r\n};\r\n\r\nexport const getNewRoom = (data) => {\r\n\tconst { room } = data;\r\n\tstore.dispatch(addRoom(room));\r\n\tconsole.log(store.getState());\r\n};\r\n\r\nexport const changeRoomPeople = (data) => {\r\n\tconst { roomId, userId, isOut } = data;\r\n\tstore.dispatch(changeRoomPeople(roomId, userId, isOut));\r\n};\r\n\r\nexport const doReload = async () => {\r\n\twindow.location.reload();\r\n};\r\n\r\nexport const blockConnect = () => {\r\n\tstore.dispatch(block());\r\n\tconsole.log(store.getState());\r\n};\r\n",["148","149"],"C:\\Users\\사이버지식정보방\\Tallk\\src\\modules\\users.js",["150"],"const INIT_USERS = 'users/INIT_USERS';\r\nconst UPDATE_USER = 'users/UPDATE_USER';\r\nconst USERS_RESET = 'users/RESET';\r\n\r\nexport const initUsers = (data) => ({\r\n\ttype: INIT_USERS,\r\n\tdata,\r\n});\r\nexport const updateUser = (userId, userObj) => ({\r\n\ttype: UPDATE_USER,\r\n\tdata: { userId, userObj },\r\n});\r\nexport const usersReset = () => ({ type: USERS_RESET });\r\n\r\nconst initialState = new Map();\r\n\r\nexport default function users(state = initialState, action) {\r\n\tconst newMap = new Map();\r\n\tstate.forEach((value, key) => {\r\n\t\tnewMap.set(String(key), value);\r\n\t});\r\n\tlet obj;\r\n\tswitch (action.type) {\r\n\t\tcase INIT_USERS:\r\n\t\t\tconst { friendsList } = action.data;\r\n\t\t\tfriendsList.forEach((item) => newMap.set(String(item._id), item));\r\n\t\t\treturn newMap;\r\n\t\tcase UPDATE_USER:\r\n\t\t\tconst { userId, userObj } = action.data;\r\n\t\t\tnewMap.set(String(userId), userObj);\r\n\t\t\t// console.log(newMap);\r\n\t\t\treturn newMap;\r\n\t\tcase USERS_RESET:\r\n\t\t\treturn new Map();\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\apiController.js",[],"C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Navigation.js",[],"C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Setting.js",[],"C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Home\\Profile.js",["151","152","153","154","155","156"],"import { Profiler, useEffect, useReducer } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { store } from '../..';\r\nfunction Profile() {\r\n\tconst store = useSelector((state) => state);\r\n\tconst { id } = useParams();\r\n\tconst user = store.users.get(id) ? store.users.get(id) : store.user;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (document.querySelector('.Navigation'))\r\n\t\t\tdocument.querySelector('.Navigation').style.display = 'none';\r\n\t\treturn () => {\r\n\t\t\tif (document.querySelector('.Navigation'))\r\n\t\t\t\tdocument.querySelector('.Navigation').style.display = '';\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst link =\r\n\t\t'https://media-exp1.licdn.com/dms/image/C511BAQHM4mtKZ1RrdA/company-background_10000/0/1519798016830?e=2159024400&v=beta&t=mg1L7tpTsYv17HZ-uDcZiOveoGDfZzVOa1puPJfEDV0';\r\n\treturn (\r\n\t\t<div className=\"Profile\">\r\n\t\t\t<img className=\"Screen\" src={link} />\r\n\t\t\t<div className=\"ProfileMain\">\r\n\t\t\t\t<div className=\"ProfileHeader\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\twindow.history.back();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fas fa-times\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div></div>\r\n\t\t\t\t\t{id === store.user._id && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\twindow.history.back();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-user-cog\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"UserInfo\">\r\n\t\t\t\t\t<h3 className=\"Quote\">{user.quoteMessage}</h3>\r\n\t\t\t\t\t<img className=\"ProfileImg\" src={user.avatarUrl} />\r\n\t\t\t\t\t<h3 className=\"UserName\">{user.userName}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"UserAction\">\r\n\t\t\t\t\t<button className=\"ChatButton\">\r\n\t\t\t\t\t\t<i className=\"fas fa-comments\" />\r\n\t\t\t\t\t\t<h3>Chat</h3>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Home\\AddFriend.js",["157"],"import { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserEmail } from '../../apiController';\r\n\r\nfunction AddFriend() {\r\n\tconst [searchUser, setSearchUser] = useState();\r\n\tconst emailInput = useRef();\r\n\tconst searchUserEmail = async () => {\r\n\t\tconst email = emailInput.current.value;\r\n\t\tconst data = await getUserEmail(email);\r\n\t\tsetSearchUser(data);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"AddFriend\">\r\n\t\t\t<div className=\"AddFriendHeader\">\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<i className=\"fas fa-chevron-left\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<h3>Add Friend by E-mail</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"AddFriendSearch\">\r\n\t\t\t\t<input className=\"EmailInput\" ref={emailInput} />\r\n\t\t\t\t<button className=\"Search\" onClick={searchUserEmail}>\r\n\t\t\t\t\t<i className=\"fas fa-search\" />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"AddFriendResult\">\r\n\t\t\t\t{!searchUser && <h4>No Result</h4>}\r\n\t\t\t\t{searchUser && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<img src={searchUser.avatarUrl} />\r\n\t\t\t\t\t\t<h4>{searchUser.userName}</h4>\r\n\t\t\t\t\t\t<button>AddFriend</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AddFriend;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\components\\Auth\\Login.js",["158"],"import { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { postLogin } from '../../apiController';\r\nimport { setId } from '../../modules/user';\r\n\r\nfunction Login({ history }) {\r\n\tconst store = useSelector((state) => state);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst email = useRef();\r\n\tconst password = useRef();\r\n\tconst loginBtn = useRef();\r\n\tconst msgLbl = useRef();\r\n\tconst [msg, setMsg] = useState();\r\n\r\n\tuseEffect(() => {}, []);\r\n\r\n\tconst onLogin = async () => {\r\n\t\tif (email.current.value === '' || password.current.value === '') {\r\n\t\t\tsetMsg('Input Email or Password!');\r\n\t\t\tmsgLbl.current.classList.add('vibe');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tmsgLbl.current.classList.remove('vibe');\r\n\t\t\t}, 200);\r\n\t\t} else {\r\n\t\t\tloginBtn.current.setAttribute('disabled', '');\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await postLogin({\r\n\t\t\t\t\temail: email.current.value,\r\n\t\t\t\t\tpassword: password.current.value,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tdispatch(setId(data));\r\n\t\t\t\thistory.push('/');\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetMsg('Wrong Email or Password!');\r\n\t\t\t\tmsgLbl.current.classList.add('vibe');\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tmsgLbl.current.classList.remove('vibe');\r\n\t\t\t\t}, 200);\r\n\t\t\t\tloginBtn.current.removeAttribute('disabled');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"Login\">\r\n\t\t\t<div className=\"LoginContent\">\r\n\t\t\t\t<h1>Tallk</h1>\r\n\t\t\t\t<h3>🔒Login</h3>\r\n\t\t\t\t<div className=\"InputArea\">\r\n\t\t\t\t\t<input type=\"text\" name=\"email\" id=\"email\" required ref={email} />\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"InputArea\">\r\n\t\t\t\t\t<input type=\"password\" name=\"pwd\" id=\"pwd\" required ref={password} />\r\n\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ButtonArea\">\r\n\t\t\t\t\t<button ref={loginBtn} onClick={onLogin}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ErrorArea\">\r\n\t\t\t\t\t<label className=\"Error\" ref={msgLbl}>\r\n\t\t\t\t\t\t{msg}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<button>Join</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\사이버지식정보방\\Tallk\\src\\dataController.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":17},{"ruleId":"163","severity":1,"message":"167","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":12},{"ruleId":"163","severity":1,"message":"168","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":13},{"ruleId":"163","severity":1,"message":"169","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":16},{"ruleId":"163","severity":1,"message":"170","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":58,"column":5,"nodeType":"173","endLine":58,"endColumn":7,"suggestions":"174"},{"ruleId":"163","severity":1,"message":"175","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":20},{"ruleId":"163","severity":1,"message":"176","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":15},{"ruleId":"171","severity":1,"message":"177","line":60,"column":5,"nodeType":"173","endLine":60,"endColumn":7,"suggestions":"178"},{"ruleId":"163","severity":1,"message":"179","line":84,"column":11,"nodeType":"165","messageId":"166","endLine":84,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":136,"column":10,"nodeType":"182","endLine":136,"endColumn":69},{"ruleId":"180","severity":1,"message":"181","line":150,"column":12,"nodeType":"182","endLine":154,"endColumn":14},{"ruleId":"163","severity":1,"message":"183","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":21},{"ruleId":"163","severity":1,"message":"184","line":1,"column":23,"nodeType":"165","messageId":"166","endLine":1,"endColumn":34},{"ruleId":"163","severity":1,"message":"185","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":9,"column":6,"nodeType":"182","endLine":9,"endColumn":42},{"ruleId":"180","severity":1,"message":"181","line":110,"column":9,"nodeType":"182","endLine":110,"endColumn":68},{"ruleId":"163","severity":1,"message":"186","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":18},{"ruleId":"163","severity":1,"message":"187","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":12},{"ruleId":"163","severity":1,"message":"188","line":2,"column":38,"nodeType":"165","messageId":"166","endLine":2,"endColumn":46},{"ruleId":"163","severity":1,"message":"189","line":11,"column":10,"nodeType":"165","messageId":"166","endLine":11,"endColumn":16},{"ruleId":"163","severity":1,"message":"190","line":11,"column":18,"nodeType":"165","messageId":"166","endLine":11,"endColumn":24},{"ruleId":"163","severity":1,"message":"191","line":11,"column":26,"nodeType":"165","messageId":"166","endLine":11,"endColumn":32},{"ruleId":"159","replacedBy":"192"},{"ruleId":"161","replacedBy":"193"},{"ruleId":"163","severity":1,"message":"194","line":22,"column":6,"nodeType":"165","messageId":"166","endLine":22,"endColumn":9},{"ruleId":"163","severity":1,"message":"195","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":18},{"ruleId":"163","severity":1,"message":"196","line":1,"column":31,"nodeType":"165","messageId":"166","endLine":1,"endColumn":41},{"ruleId":"163","severity":1,"message":"197","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"163","severity":1,"message":"176","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":23,"column":4,"nodeType":"182","endLine":23,"endColumn":41},{"ruleId":"180","severity":1,"message":"181","line":46,"column":6,"nodeType":"182","endLine":46,"endColumn":57},{"ruleId":"180","severity":1,"message":"181","line":34,"column":7,"nodeType":"182","endLine":34,"endColumn":41},{"ruleId":"163","severity":1,"message":"168","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":13},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'setUser' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'store' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'act' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["200"],"'AddChatPopup' is defined but never used.","'store' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'info'. Either include them or remove the dependency array.",["201"],"'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'ChatRoomList' is defined but never used.","'base_uri' is defined but never used.","'room' is defined but never used.","'initRoom' is defined but never used.","'chatId' is assigned a value but never used.","'userId' is assigned a value but never used.","'roomId' is assigned a value but never used.",["198"],["199"],"'obj' is defined but never used.","'Profiler' is defined but never used.","'useReducer' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [dispatch, userId]",{"range":"206","text":"207"},"Update the dependencies array to be: [dispatch, id, info]",{"range":"208","text":"209"},[1822,1824],"[dispatch, userId]",[1940,1942],"[dispatch, id, info]"]